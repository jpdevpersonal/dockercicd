name: Basic-CI-Test

# Specify the branch to work on
on:
  push:
    # Note: this will not work on initial commit or push of branch
    branches: [create-pipeline-from-scratch]
jobs:
  checkoutBranch:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git
        run: |
          git init
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Clone repo and checkout branch
        run: |
          git clone https://github.com/${{ github.repository }} repo
          cd repo
          git fetch origin
          git checkout create-pipeline-from-scratch

  runTests:
    needs: checkoutBranch
    runs-on: ubuntu-latest

    steps:
      # - uses: actions/checkout@v2
      - name: Install npm packages
        id: npm_install
        run: npm i
      - name: Run Tests
        id: run_tests
        run: npm run test

  buildDockerImage:
    needs: runTests
    runs-on: ubuntu-latest

    steps:
      # - uses: actions/checkout@v2
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker image
        run: docker build -t jpickard393/dockercicd -f Dockerfile .
      - name: Push Docker image
        run: docker push jpickard393/dockercicd

  deploy:
    needs: buildDockerImage
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy image to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.DOCKER_IMAGE_NAME }}:latest

      # This does not work - manually deploy to azure
      # - name: Deploy to Azure Web App
      #   run: |
      #     az webapp config container set --name ${{ secrets.AZURE_WEBAPP_NAME }}
      #     --resource-group container-resgroup
      #     --docker-custom-image-name ${{ secrets.DOCKER_USERNAME }}/dockercicd:latest
      #     az webapp restart --name dockercicdweb
      #     --resource-group container-resgroup
